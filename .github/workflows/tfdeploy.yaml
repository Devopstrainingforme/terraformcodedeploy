name: Deploy Infrastructure

on:
  push:
    branches:
      - master

jobs:
  tf_fmt:
    name: Deployment
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v1

    - name: Terraform Init
      id: init
      shell: bash    
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        [ -n "$LOG_LEVEL" ] && export TF_LOG="$LOG_LEVEL"
        terraform init -no-color -input=false
      working-directory: ${{ env.CURRENT_ENV }}

    - name: Terraform validate
      id: validate
      shell: bash
      run: |
        [ -n "$LOG_LEVEL" ] && export TF_LOG="$LOG_LEVEL"
        terraform validate -no-color
      working-directory: ${{ env.CURRENT_ENV }}


    - name: Terraform plan
      id: plan
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        [ -n "$LOG_LEVEL" ] && export TF_LOG="$LOG_LEVEL"
        terraform plan -input=false -no-color ${{ env.TF_VARS }}
      working-directory: ${{ env.CURRENT_ENV }}


    - name: Terraform Apply
      id: apply
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        [ -n "$LOG_LEVEL" ] && export TF_LOG="$LOG_LEVEL"
        terraform apply -no-color -auto-approve -input=false ${{ env.TF_VARS }}
      working-directory: ${{ env.CURRENT_ENV }}